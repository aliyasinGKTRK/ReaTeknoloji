// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ReaContext))]
    [Migration("20230211143011_Create")]
    partial class Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Klavye"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Monitör"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mouse"
                        });
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Oyuncu klavyesi",
                            Price = 500m,
                            ProductName = "Rampage"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "RGB Oyuncu klavyesi",
                            Price = 250m,
                            ProductName = "Micropack"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Beyaz kablosuz Q klavye",
                            Price = 200m,
                            ProductName = "Everest"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Kablosuz Q klavye",
                            Price = 150m,
                            ProductName = "logitech"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "IPS Ekran Monitör",
                            Price = 6000m,
                            ProductName = "Huawei"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Curved oyuncu monitörü",
                            Price = 6000m,
                            ProductName = "Samsung"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "IPS Ekran moniör",
                            Price = 5000m,
                            ProductName = "Samsung"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "IPS Ekran moniör",
                            Price = 5000m,
                            ProductName = "LG"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "Cruved moniör",
                            Price = 4500m,
                            ProductName = "LG"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "Kablosuz mouse",
                            Price = 500m,
                            ProductName = "logitech"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "Kablosuz mouse",
                            Price = 500m,
                            ProductName = "Everest"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Description = "Kablosuz oyunucu mouse",
                            Price = 1500m,
                            ProductName = "Rampage"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Description = "Kablosuz oyunucu mouse",
                            Price = 1500m,
                            ProductName = "Rampage"
                        });
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.HasOne("Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entity.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
